package com.practice.concurrency.highconcurrency.example.immutable;import com.google.common.collect.Maps;import com.practice.concurrency.highconcurrency.annoation.ThreadSafe;import lombok.extern.slf4j.Slf4j;import java.util.Map;/** * Description * Date 2020/6/21 16:40 * Created by kwz */@Slf4j@ThreadSafepublic class ImmutableDemo1 {    private final static Integer a = 1;    private final static String b = "2";    private final static Map<Integer, Integer> map = Maps.newHashMap();    static {        map.put(1, 2);        map.put(2, 3);        map.put(3, 4);    }    public static void main(String[] args) {//        a = 2;//        b = "2";//        map = Maps.newHashMap();  引用了之后不能指向另一个对象了，但是可以修改如下：        map.put(1, 3);        log.info("{}", map.get(1));    }    private void test(final int a) {//        a = 3;        //方法中用到，传入的final类型也是不能修改的    }}