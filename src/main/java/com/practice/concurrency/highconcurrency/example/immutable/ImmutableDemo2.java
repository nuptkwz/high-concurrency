package com.practice.concurrency.highconcurrency.example.immutable;import com.google.common.collect.Maps;import com.practice.concurrency.highconcurrency.annoation.NotThreadSafe;import com.practice.concurrency.highconcurrency.annoation.ThreadSafe;import lombok.extern.slf4j.Slf4j;import java.util.Collections;import java.util.Map;/** * Description * Date 2020/6/21 16:40 * Created by kwz */@Slf4j@ThreadSafepublic class ImmutableDemo2 {    private final static Integer a = 1;    private final static String b = "2";    private static Map<Integer, Integer> map = Maps.newHashMap();    static {        map.put(1, 2);        map.put(2, 3);        map.put(3, 4);        map = Collections.unmodifiableMap(map);    }    public static void main(String[] args) {        //实际中抛出了异常，它能保证数据不会被污染        map.put(1, 3);        log.info("{}", map.get(1));    }}